@model List<Attendance>
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    var userId = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    ViewData["Title"] = "Home";
}

<h1 class="text-center">Today Attendance</h1>
<div class="row mb-2">
    <div class="col-md-6 col-sm-12">
        <div class="btn-group">
            @if (Model.Where(z => z.Date.Date == DateTime.Now.Date).Count() == 0)
            {
                <form asp-controller="Attendances" asp-action="Index" method="post" class="w-75 m-auto">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <input type="hidden" name="UserId" value="@userId" />
                    </div>
                   
                    <button type="submit" class="btn btn-primary mt-1">Exist</button>
                </form>

            }else if (Model.Where(z => z.Date.Date == DateTime.Now.Date && z.CheckOut == TimeSpan.Zero).Count() > 0)
            {
                <form asp-controller="Attendances" asp-action="Index" method="post" class="w-75 m-auto">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <input type="hidden" name="UserId" value="@userId" />
                    </div>

                    <button type="submit" class="btn btn-primary mt-1">Leave</button>
                </form>
            }
        </div>
    </div>
    <div class="col-md-2 col-sm-0"></div>

</div>
<table class="text-center table table-bordered table-hover table-responsive">
    <thead class=" bg-black text-white">
        <tr>
            <th scope="col">Date</th>
            <th scope="col">Check in</th>
            <th scope="col">Check out</th>
            <th scope="col">Late</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.Date.Day - @task.Date.Month - @task.Date.Year </td>
                <td>@task.CheckIn.Hours : @task.CheckIn.Minutes</td>
                <td>@task.CheckOut.Hours : @task.CheckOut.Minutes</td>
                <td>
                    @{
                        var egyptTime = new TimeSpan(9,0,0);
                        var lat = @task.CheckIn - @egyptTime ;
                    }
                    @lat.Hours : @lat.Minutes : @lat.Seconds
                </td>
            </tr>
        }
    </tbody>
</table>