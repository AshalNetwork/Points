@model List<Attendance>
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    var userId = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    ViewData["Title"] = "Home";
}

<h3 class="text-center m-5">@($"{ViewBag.Name} Attendance") </h3>
<div class="row mb-2">
    <div class="col-md-6 col-sm-12">
        <div class="btn-group">
            @if (Model.Where(z => z.Date.Date == DateTime.Now.Date).Count() == 0)
            {
                <form asp-controller="Attendances" asp-action="Index" method="post" class="w-75 m-auto">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <input type="hidden" name="UserId" value="@userId" />
                    </div>
                   
                    <button type="submit" class="btn btn-primary mt-1">Exist</button>
                </form>

            }else if (Model.Where(z => z.Date.Date == DateTime.Now.Date && z.CheckOut == TimeSpan.Zero).Count() > 0)
            {
                if (DateTime.Now.Hour > 14)
                {
                    <form asp-controller="Attendances" asp-action="Index" method="post" class="w-75 m-auto">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <input type="hidden" name="UserId" value="@userId" />
                        </div>

                        <button type="submit" class="btn btn-primary mt-1">Leave</button>
                    </form>
                }
            }
        </div>
    </div>
    <div class="col-md-2 col-sm-0"></div>

</div>
<table class="text-center table table-bordered table-hover table-responsive">
    <thead class=" bg-black text-white">
        <tr>
            <th scope="col">Date</th>
            <th scope="col">Check in</th>
            <th scope="col">Check out</th>
            <th scope="col">Late</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.Date.Day.ToString("D2") - @task.Date.Month.ToString("D2") - @task.Date.Year </td>
                <td>@task.CheckIn.Hours.ToString("D2") : @task.CheckIn.Minutes.ToString("D2")</td>
                <td>
                @(
                    (task.CheckOut.Hours > 12
                    ? (task.CheckOut.Hours - 12).ToString("D2")
                    : (task.CheckOut.Hours == 0 ? "00" : task.CheckOut.Hours.ToString("D2"))
                    ) + ":" + task.CheckOut.Minutes.ToString("D2")
                    )
                </td>
                <td>
                    @{
                        var user = await UserManager.FindByIdAsync(task.ApplicationUserId);
                        var egyptTime = new TimeSpan();
                        TimeSpan late = new TimeSpan();

                        if (user.Email.ToLower() == "ahmeddesign@gmail.com")
                        {
                            egyptTime = new TimeSpan(13, 0, 0);
                            if (task.CheckIn > new TimeSpan(13, 0, 0))
                                late = task.CheckIn - egyptTime;
                        }
                        else
                        {
                            egyptTime = new TimeSpan(9, 0, 0);
                            if (task.CheckIn > new TimeSpan(9, 0, 0))
                                late = task.CheckIn - egyptTime;
                        }
                    }
                    @late.Hours.ToString("D2") : @late.Minutes.ToString("D2") : @late.Seconds.ToString("D2")
                </td>
            </tr>
        }
    </tbody>
</table>